package com.andrews.escenario;

import com.andrews.sprites.Disparo;

public interface Hilera {

	/**
	 * Realiza el movimiento de los lados y hacia abajo de los enemigos.
	 */
	private void movimientoEnemigos() {
		for (int i = 0; i < listaEnemigos.getTamaño(); i++) {
			if(!listaEnemigos.getDato(0).colisionIzquierda() && revisaColision == 1) {
				listaEnemigos.getDato(i).getBordes().x -= 0.7f;
			}
			else if(listaEnemigos.getDato(0).colisionIzquierda() && revisaColision == 1) {
				for (int x = listaEnemigos.getTamaño()-1; x >= 0;x --) {
					listaEnemigos.getDato(x).getBordes().y -= 40;	
				}
				revisaColision=2;
			}
			if (!listaEnemigos.getDato(listaEnemigos.getTamaño()-1).colisionDerecha() && revisaColision == 2) {
				listaEnemigos.getDato(i).getBordes().x += 0.7f;
			}
			else if(listaEnemigos.getDato(listaEnemigos.getTamaño()-1).colisionDerecha() && revisaColision == 2) {
				for(int x = 0; x < listaEnemigos.getTamaño(); x ++) {
					listaEnemigos.getDato(x).getBordes().y -= 40;
				}
				revisaColision = 1;
			}
			if(listaEnemigos.getDato(i).getBordes().y <= 70) {
				main.fondo = new MainMenu(main);
				main.setScreen(main.fondo);
			}
		}		
	}
	
	private void revisaImpacto(int i) throws Throwable {
		if(shot.getBordes().overlaps(listaEnemigos.getDato(i).getBordes())) {
			shot.getTexture().dispose();
			shot = new Disparo(500, 900, "laser.png");
			if(listaEnemigos.getDato(i).isShooted()) {
				if(listaEnemigos.getDato(i).getTipoEnemigo().equals("boss") && listaEnemigos.getDato(i).getResistencia() == 1) {
					listaEnemigos.eliminarTodo();
					System.out.println("Felicidades");
					return;
				}
				if (listaEnemigos.getDato(i).getResistencia() == 1) {
					enemyDeadSound.play();
					listaEnemigos.eliminarPos(i, listaEnemigos);
				}
			}
		}
	}
}
